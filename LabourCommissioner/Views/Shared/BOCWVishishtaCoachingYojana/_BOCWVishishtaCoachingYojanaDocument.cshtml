@using static LabourCommissioner.Abstraction.ViewDataModels.DocumentDetails
@using System.Web
@using LabourCommissioner.Common.Utility
@model IList<DocumentFileDetails>
@{
    ViewData["Title"] = "Save Attachment";
    var ServiceId = ViewBag.ServiceId;
    var ApplicationId = ViewBag.ApplicationId;
    var TabSequenceNo = ViewBag.TabSequenceNo;
}

@*<form id="myForm" asp-controller="BOCWSikshanSahayYojana" asp-action="Files" method="post" enctype="multipart/form-data">*@
<form enctype="multipart/form-data" method="post" asp-controller="BOCWVishishtaCoachingYojana" asp-action="UploadDocument" asp-route-strApplicationId="@HttpUtility.UrlEncode(CommonUtils.Encrypt(ApplicationId.ToString()))" asp-route-strServiceId="@HttpUtility.UrlEncode(CommonUtils.Encrypt(ServiceId.ToString()))">
    @*<input type="hidden" asp-for="TabSequenceNo" value="@ApplicationId" />*@
    @* <div asp-validation-summary="All" class="text-danger"></div>*@
    <div class="tab-pane fade show" id="pills-contact" role="tabpanel" aria-labelledby="pills-contact-tab" tabindex="0">

        <span class="text-danger font-weight-bolder">
            <small>
                <b id="">Note : બધા અપલોડ કરેલા દસ્તાવેજોની સ્વયં પ્રમાણિત હોવી જોઈએ</b> <br>
                <b id="">Note : અપલોડ કરેલ દસ્તાવેજ ની સાઇઝ 1 MB કરતાં ઓછી હોવી જોઈએ.</b> <br>
            </small>
        </span>
        <table class="table table-striped table-bordered table-sm">
            <tbody>
                @if (Model != null && Model.Count() > 0)
                {
                    for (int i = 0; i < Model.Count; i++)
                    {
                        <tr>
                            <td scope="col">
                                @if (@Model[i].IsCompulsary == 1)
                                {
                                    @Model[i].DocumentNameGuj <span class="text-danger">*</span>
                                }
                                else
                                {
                                    @Model[i].DocumentNameGuj
                                }

                                @Html.HiddenFor(m => Model[i].DocumentMasterId)
                                @Html.HiddenFor(m => Model[i].DocumentName)
                                @Html.HiddenFor(m => Model[i].DocumentNameGuj)
                                @Html.HiddenFor(m => Model[i].DocumentTypeIds)
                                @Html.HiddenFor(m => Model[i].ServiceId)
                                @Html.HiddenFor(m => Model[i].TabSequenceNo)
                            </td>

                            <td scope="col">

                                @if (@Model[i].IsCompulsary == 1)
                                {
                                    string IsValidate = "false";
                                    IsValidate = (@Model[i].CouchDBDocId != null && @Model[i].CouchDBDocId != "") ? "false" : "true";
                                    <input type="file" id="FormFile" asp-for="@Model[i].IdImage.File" accept="img/*,png/*,pdf/*" data-val="@IsValidate" class="fileupload custom-file-input form-control h-auto fs-75" />
                                    <span asp-validation-for="@Model[i].IdImage.File" class="text-danger"></span>
                                }
                                else
                                {
                                    <input type="file" id="FormFile" asp-for="@Model[i].IdImage.File" onchange="fileValidation(this.value)" data-val="false" class="fileupload custom-file-input form-control h-auto fs-75" />
                                }


                            </td>
                            <td scope="col">
                                <a asp-controller="BOCWVishishtaCoachingYojana" asp-action="DownloadDocument" asp-route-id="@Model[i].CouchDBDocId" asp-route-filename="@Model[i].FileName">@Model[i].FileName</a>
                            </td>
                            @*<td scope="col">
                    <input type="reset">
                    </td>*@
                        </tr>
                    }
                }
            </tbody>
        </table>

    </div>
    <div class="card-footer text-center border">
        <button type="submit" class="btn btn-sm btn-primary pl-3 pr-3">Save</button>
        <button type="button" class="btn btn-sm btn-secondary pl-3 pr-3 mr-2" onClick="CancelOnScheme('@HttpUtility.UrlEncode(CommonUtils.Encrypt(@ServiceId))');">Cancel</button>
    </div>
</form>
<script type="text/javascript">
    $(document).ready(function() {

        debugger;
        ValidateDocumentFile();
        //const uploads = []
        //const fileSelector = document.querySelectorAll('[id="FormFile"]');

        //if (fileSelector != null) {
        //    fileSelector.forEach(buttonDel => {
        //        debugger;
        //        buttonDel.addEventListener('change', (event) => {

        //            const file = event.target.files[0]
        //            const filereader = new FileReader()
        //            filereader.onloadend = function(evt) {
        //                if (evt.target.readyState === FileReader.DONE) {
        //                    const uint = new Uint8Array(evt.target.result)
        //                    let bytes = []
        //                    uint.forEach((byte) => {
        //                        bytes.push(byte.toString(16))
        //                    })
        //                    const hex = bytes.join('').toUpperCase()
        //                    const mimeType = getMimetype(hex)
        //                    if (!mimeType) {
        //                        alert('Invalid file type');
        //                        $(fileSelector).val('')
        //                        //file.val('');
        //                        return false;
        //                    }
        //                    if (file.size > 1000000) {
        //                        alert('Uploaded documents are less than 1 MB');
        //                        $(fileSelector).val('')
        //                        return false;
        //                    }
        //                }
        //            }


        //            const blob = file.slice(0, 4);
        //            filereader.readAsArrayBuffer(blob);
        //        })

        //        const getMimetype = (signature) => {
        //            switch (signature) {
        //                case '89504E47':
        //                    return true //'image/png'
        //                case '25504446':
        //                    return true //'application/pdf'
        //                case 'FFD8FFE1':
        //                    return true //'image/jpeg'
        //                case 'FFD8FFE0':
        //                    return true //'image/jpg'
        //                default:
        //                    return false // 'Unknown filetype'
        //                //case '47494638':
        //                //    return 'image/gif'
        //                //case '504B0304':
        //                //    return 'application/zip'

        //            }
        //        }
        //    });
        //}





    });
</script>
